pip install selenium
pip install pytest
pip install openpyxl
pip install pytest-html
D:\Program\Python_Selenium\Facebook_Signup_Page>pytest tests/ --html=report.html --self-contained-html
pip install seleniumbase
pip install selenium pytest allure-pytest
pip install psycopg2-binary
pip install python-dotenv


pytest
selenium
pytest-html
psycopg2
python-dotenv
psycopg2-binary




CI Email send

pip install -r requirements.txt
pytest --html=report.html --self-contained-html
python send_email.py
python push_and_email.py




sender = 'deepanvinayagam1411@gmail.com'
recipient = 'deepanvinayagam1411@gmail.com'
subject = 'Pytest Selenium Report'
app_password = 'bhxu nskk kmyx usyf'



git add .
git commit -m "Trigger via webhook"
git push

(.venv) D:\Program\Python_Selenium\Qspider_Demo_Module\tests>pytest test_demo_page.py
pip install pytest-reportportal

test file    5 testcase is available i want run in 1 and 3
(.venv) D:\Program\Python_Selenium\Qspider_Demo_Module\tests>pytest test_demo_page.py -k "test_register_page or test_button_page"


import webbrowser
webbrowser.open("report/log.html")


Alert
pip install pyautogui

pip install opencv-python






# import pytest
# from selenium import webdriver
#
# @pytest.fixture(scope="class")
# def driver_init(request):
#     driver = webdriver.Chrome()                      # setup Run before
#     driver.maximize_window()
#     request.cls.driver = driver
#     yield
#     driver.quit()                        #teardown


logger.log("Launching Chrome", "PASS", "ChromeDriver launched successfully", "driver = webdriver.Chrome()")
logger.log("Opening Qspider Webpage", "PASS", "Navigating to https://demoapps.qspiders.com/", 'driver.get("https://demoapps.qspiders.com/")')
logger.log("Click 'UI Testing Concepts'", "PASS", "Clicked the UI Testing Concepts", 'driver.find_element(By.LINK_TEXT, "//p[text()='"UI Testing Concepts"']/following-sibling::div")')
logger.log("Verify 'Practice Session Title'", "PASS", "Verify The Practice Session Title", 'driver.find_element(By.LINK_TEXT, "//button[normalize-space(text())='"Practice Session"']"')
logger.log("Click 'Text Field'", "PASS", "Clicked the text field", 'driver.find_element(By.LINK_TEXT, "Create The Text Field"')
logger.log("Verify 'Register Title'", "PASS", "Verify The Register Title", 'driver.find_element(By.LINK_TEXT, "//h1[normalize-space(text())='"Register"']"')
logger.log("Enter 'Name'", "PASS", "Enter the name",'driver.find_element(By.LINK_TEXT, "//input[@placeholder='"Enter your name"']"')
logger.log("Enter 'Email'", "PASS", "Enter the email",'driver.find_element(By.LINK_TEXT, "//input[@placeholder='"Enter your Email"']"')
logger.log("Enter 'Password'", "PASS", "Enter the password",'driver.find_element(By.LINK_TEXT, "//input[@placeholder='"Enter your password"']"')
logger.log("Click 'Submit Button'", "PASS", "Click the Submit Button",'driver.find_element(By.LINK_TEXT, "//button[@type='"submit"']"')







pip install pytest-reportportal


pytest.ini
[pytest]
addopts = --reportportal
rp_uuid = your_uuid_from_reportportal
rp_endpoint = http://your-reportportal-url/api/v1
rp_project = your_project_name
rp_launch = Your_Test_Run_Name
rp_launch_description = "Advanced UI Test Report"



pytest --reportportal







































pip install pytest-xdist


 https://www.oracle.com/java/technologies/javase/jdk21-archive-downloads.html


System Type	Download This
Windows (64-bit)	x64 Installer .exe file

C:\Program Files\Java\jdk-21



C:\Program Files\Java\jdk-21\bin        -> jenkinks java path



























pipeline {
    agent any

    environment {
//         EMAIL = 'your-email@gmail.com'
        EMAIL = 'deepanvinayagam1411@gmail.com'
    }

    stages {
        stage('Install Dependencies') {
            steps {
                bat 'pip install -r requirements.txt'
            }
        }

        stage('Run Tests') {
            steps {
                bat 'pytest --html=report.html || exit 0'
            }
        }

        stage('Push Report to GitHub') {
            steps {
                bat '''
                    git config user.email "deepanvinayagam2912@gmail.com.com"
                    git config user.name "Deepandeeps29"
                    git add report.html
                    git commit -m "Update test report" || echo "No changes"
                    git push origin HEAD:main
                '''
            }
        }
    }

    post {
        always {
            script {
                if (!fileExists('report.html')) {
                    writeFile file: 'report.html', text: '<html><body><h2>No Report Generated</h2></body></html>'
                }
            }

            emailext (
                subject: "ðŸ§ª Jenkins Test Report",
                body: """<html>
                    <p>Hi Team,</p>
                    <p>The Jenkins test build has completed.</p>
                    <p>See the attached report.</p>
                    <p>Regards,<br>Jenkins</p>
                </html>""",
                mimeType: 'text/html',
//                 to: "your-team-email@gmail.com",
                to: "deepanvinayagam1411@gmail.com",
//                 from: "your-email@gmail.com",
                from: "deepanvinayagam2912@gmail.com",
                attachmentsPattern: 'report.html'
            )
        }
    }
}
